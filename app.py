import streamlit as st
import tempfile
import base64
import os
from PIL import Image
import imageio.v3 as iio
import ffmpeg
from openai import OpenAI

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

st.title("An√°lise Qualitativa de V√≠deos com GPT-4o ü§ñ")

video_file = st.file_uploader("Fa√ßa upload de um v√≠deo (.mp4)", type=["mp4"])

if video_file:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp4") as tmp:
        tmp.write(video_file.read())
        video_path = tmp.name

    st.success("V√≠deo carregado! Extraindo frames e √°udio...")

    # Extrair frames
    frames = list(iio.imiter(video_path))
    selected_frames = frames[::20][:5]

    # Exibir os frames
    for i, frame in enumerate(selected_frames):
        img = Image.fromarray(frame)
        st.image(img, caption=f"Frame {i+1}", width=300)

    # üîä Extrair √°udio do v√≠deo
    audio_path = video_path.replace(".mp4", ".wav")
    ffmpeg.input(video_path).output(audio_path, format='wav').run(overwrite_output=True)

    with open(audio_path, "rb") as audio_file:
        audio_bytes = audio_file.read()

    st.audio(audio_bytes, format="audio/wav")

    # ‚úÖ Transcrever √°udio
    st.info("Transcrevendo o √°udio com o Whisper...")
    audio_file = open(audio_path, "rb")
    transcript = client.audio.transcriptions.create(
        file=audio_file,
        model="whisper-1"
    )
    st.write("Transcri√ß√£o:", transcript.text)

    # ‚úÖ An√°lise final com GPT
    st.info("Gerando an√°lise com GPT-4o...")
    prompt = f"""
    Abaixo est√° a transcri√ß√£o de um v√≠deo e as descri√ß√µes visuais dos principais frames.
    Transcri√ß√£o:
    {transcript.text}

    (As descri√ß√µes visuais ainda n√£o foram geradas aqui ‚Äî podemos gerar depois com vision)

    Com base nesse conte√∫do, me diga:
    - Qual o tom do v√≠deo?
    - H√° algum destaque visual ou sonoro importante?
    - Algum elemento pode ter contribu√≠do para engajamento (edi√ß√£o, fala, imagem)?

    Seja breve e direta.
    """

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}]
    )
    st.success("An√°lise completa:")
    st.markdown(response.choices[0].message.content)

